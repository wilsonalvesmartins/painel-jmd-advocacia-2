version: '3.8'

services:
  # Serviço do Frontend (Nginx)
  webapp:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: jmd_webapp
    restart: unless-stopped
    depends_on:
      - api
    networks:
      - jmd-network

  # Serviço do Backend (API)
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: jmd_api
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy # Espera que a base de dados esteja pronta
    environment:
      # A API recebe a URL de conexão já pronta
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - jmd-network

  # Serviço da Base de Dados
  db:
    image: postgres:15-alpine
    container_name: jmd_database
    restart: unless-stopped
    environment:
      # As credenciais são definidas aqui
      POSTGRES_USER: jmd_user
      POSTGRES_PASSWORD: superstrongpassword123 # Recomendo que troque esta senha
      POSTGRES_DB: jmd_processos
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - jmd-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U jmd_user -d jmd_processos"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
    driver: local

networks:
  jmd-network:
    driver: bridge

